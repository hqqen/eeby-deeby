
%load in the linearized system matrices generated by DIPdyn.m
%load("getLinearizedSystem.mat",'-mat')

Kp = 0.8;
Ki = 0;
Kd = 10;
p = pid(Kp, Ki, Kd);
N = 4;

pend_open = ss(A2,B2,C2,D2);
tran_func = tf(pend_open(1,1));
%disp(tran_func)
step(tran_func)
disp(stepinfo(tran_func))

pid_pend_pid = ss(A2,B2*N,C2,D2);
%[z,p,k] = ss2zp(A2,B2,C2,D2);
%disp(z);
%disp(p);
%disp(k);

%sys = zpk(z(1,:),p(1,:),k(1,:));
%tuner = pidtune(sys,'PID');

pid_pend = feedback(p*pid_pend_pid(1,1),1);
closed_tf = tf(pid_pend);
disp(closed_tf)

disp(bandwidth(closed_tf))
disp(stepinfo(closed_tf))

figure("Open Loop Step");
step(tran_func);

figure("Closed Loop Step");
step(closed_tf);
figure();
sgtitle("Stabilized Root Loci");
%subplot(2,1,1)
rlocus(pid_pend(1,1))
%title("\tau_1 -> \theta_1")
%subplot(2,1,2)
%rlocus(pid_pend(1,2))
%title("\tau_1 -> \theta_2")

figure();
bode(pid_pend(1,1))
title("Stabilized Bode Plot (\tau_1 -> \theta_1)");
%figure();
%bode(pid_pend(1,2))
%title("Stabilized Bode Plot (\tau_1 -> \theta_2)");

figure();
sgtitle("Stabilized Nyquist Plots")
%subplot(2,1,1)
nyquist(pid_pend(1,1))
%title("\tau_1 -> \theta_1");
%subplot(2,1,2)
%nyquist(pid_pend(1,2))
%title("\tau_1 -> \theta_2");


autoArrangeFigures(2,2,1)
